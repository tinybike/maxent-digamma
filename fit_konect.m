% fit_konect.m
% Parse and fit network degree distributions for datasets downloaded from 
% the Konect website (konect.uni-koblenz.de/networks)
% (c) Jack Peterson, 4/18/2013

% Basic file and dataset info
datafile = {'opsahl-openflights', 'lasagne-spanishbook', 'enron',...
    'eat', 'web-BerkStan', 'dblp-cite',...
    'youtube-u-growth', 'youtube-u-growth', 'zhishi-baidu-internallink',...
    'citeseer', 'ucidata-zachary', 'arenas-pgp',...
    'dbpedia-similar', 'petster-friendships-hamster', 'munmun_digg_reply',...
    'opsahl-ucsocial', 'slashdot-threads', 'elec',...
    'opsahl-powergrid', 'trec-wt10g', 'advogato',...
    'epinions', 'epinions'};
fig_title = {'Airports', 'Spanish word adjacency', 'Enron emails',...
    'Thesaurus', 'Berkeley/Stanford', 'DBLP',...
    'Youtube (in)', 'Youtube (out)', 'Baidu',...
    'Citeseer', 'Zachary Karate Club', 'Pretty Good Privacy',...
    'DBpedia', 'Hamsterster', 'Digg',...
    'UC Irvine', 'Slashdot', 'Wikipedia elections',...
    'Power grid', 'TREC WT10g', 'Advogato',...
    'Epinions (in)', 'Epinions (out)'};
fig_xlabel = {'connections', 'words', 'emails',...
    'associations', 'links', 'citations',...
    'friends', 'friends', 'internal links',...
    'citations', 'ties', 'interactions',...
    'similarity', 'friends', 'replies',...
    'sent messages', 'threads', 'votes',...
    'power lines', 'hyperlinks', 'trusts',...
    'trusts', 'trusts'};
directed = {'in', 'in', 'in',...
    'in', 'in', 'in',...
    'in', 'out', 'all',...
    'all', 'no', 'no',...
    'no', 'no', 'in',...
    'in', 'in', 'out',...
    'no', 'out', 'out',...
    'in', 'out'};

% Switch off warning messages so the screen isn't flooded by dataset-size
% warnings while fitting (turned back on at the end of the script)
warning off
num_files = length(datafile);

for kk = 7:7
    
    % Convert the edge list input file to counts
    savefile = strcat(strcat(strcat(strcat('ME_PL_fitted_',...
        datafile{kk}),'_'),directed{kk}),'.mat');
    if exist(savefile,'file')
        load(savefile);
    else
        filepath = strcat('network_data/out.', datafile{kk});
        counts = process_konect(filepath, ' ', directed{kk});
    end
    
    % Calculate PDF from counts
    [x,y,freq] = get_pdf(counts);
    
    % Get maximum likelihood estimates for the digamma p(k) for the two
    % adjustable parameters mu^0 (u here) and k_0 (1/s here)
    [params,params_err] = mle(counts,'pdf',@digamma_pk,'start',[2 1],...
        'lowerbound',[0 0]);
    u = params(1);
    s = params(2);
    u_err = u-params_err(1,1);
    k0 = 1/s;
    k0_err = k0*(s-params_err(1,2))/s;
    fit_pk = digamma_pk(x,u,s);
    
    % Goodness-of-fit simulations
    p_val = ks_gof_sim(x,y,fit_pk,u,s,3,length(counts));
%     p_val = 0;
    
    % Output to screen in TeX table format
    fprintf('%s & %f(%f) & %f(%f) & %f & %i & %f & %f\\\\\n',...
        fig_title{kk},u,u_err,k0,k0_err,mean(counts),sum(freq),u/s,p_val);
    
    % Label plot and save to EPS file
    figure(1)
    clf
    loglog(x,y,'bo');
    hold on
    loglog(x,fit_pk,'k-');
    axis([min(x)/2 max(x)*2 min(y(y>0))/2 max(y)*2])
    xlabel(fig_xlabel{kk},'interpreter','latex','fontsize',22)
    ylabel('probability','interpreter','latex','fontsize',22)
    title(fig_title{kk},'interpreter','latex','fontsize',22)
    print('-depsc2',strcat('ME_PL_fit_',datafile{kk}));
    
    % Save workspace
    save(savefile);
    
end

% Turn warnings back on
warning on